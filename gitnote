初始化一个Git仓库，使用git init命令。
$ mkdir learngit
$ cd learngit
$ git init
添加文件到Git仓库，分两步：
使用命令git add <file>，注意，可反复多次使用，添加多个文件；
使用命令git commit -m <message>，完成。
git log --pretty=oneline 命令可以显示所有提交过的版本信息
git reflog 可以查看所有分支的所有操作记录(包括已经被删除的commit记录和reset的操作)
git reset --hard HEAD~1/HEAD~100/HEAD^/HEAD^^
git reset --hard d6c8197

工作去文件--->git add提交到暂存区--->git commit提交到(master)分子
每次修改，如果不用git add到暂存区，那就不会加入到commit中

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
git status查看stage及branch状态信息。

克隆远程库
git clone git@github.com:yongxinyouth/keynotes.git
git clone https://github.com/yongxinyouth/keynotes.git

克隆远程库git clone--->关联远程库 git remote add--->推送本地文件到远程库git push

使用命令git remote add origin git@server-name:path/repo-name.git关联远程库；
使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

git remote rm origin (远程库名从origin改为github)
--> git remote add github git@github.com:yongxinyouth/keynotes.git
--> git push github master:推送master分支到远程库

全局身份配置
git config --global user.email "you@example.com"
git config --global user.name "Your Name"

创建与合并分支
git checkout -b dev :创建并把HEAD切换到dev分支
1.git branch dev :创建分支
2.git checkout dev :切换到dev分支
git branch :查看当前分支

git merge dev
git branch -d dev

